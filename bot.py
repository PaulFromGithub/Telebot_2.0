import markup as markup
import telebot
import config
import random
from telebot import types

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('stic/hi.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    item1 = types.KeyboardButton('‚ÇΩ –ú–æ–Ω–µ—Ç–∫–∞')
    item2 = types.KeyboardButton('üé≤ –ö–æ—Å—Ç–∏')
    item3 = types.KeyboardButton('‚ôä‚ôå –ì–æ—Ä–æ—Å–∫–æ–ø')

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n"
                                      "–Ø –±–æ—Ç {1.first_name}.".format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

    low_mess = message.text.lower()
    if low_mess == '–∫–∞–∫ –¥–µ–ª–∞?':
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton(text='–•–æ—Ä–æ—à–æ', callback_data='good')
        item2 = types.InlineKeyboardButton(text='–ù–µ –æ—á–µ–Ω—å', callback_data='bad')

    else:
        bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å ‚òπ')


@bot.message_handler(content_types=['text'])
def button(message):
    if message.text == 'üé≤ –ö–æ—Å—Ç–∏':
        dice = '‚öÄ‚öÅ‚öÇ‚öÉ‚öÑ‚öÖ'
        bot.send_message(message.chat.id, random.choice(dice))
        bot.send_message(message.chat.id, random.choice(dice))
    elif message.text == '‚ÇΩ –ú–æ–Ω–µ—Ç–∫–∞':
        bot.send_message(message.chat.id, 'ü™ô')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):

    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ —Ö–æ—Ä–æ—à–æ‚ò∫')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç‚òπ')

    except Exception as e:
        print(repr(e))

bot.polling(none_stop=True)
